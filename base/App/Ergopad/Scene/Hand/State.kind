type App.Ergopad.Scene.Hand.State.Points {
  new(
    pinky: List<Pair<U32, U32>>,
    ring: List<Pair<U32, U32>>,
    middle: List<Pair<U32, U32>>,
    index: List<Pair<U32, U32>>,
    index_far: List<Pair<U32, U32>>,
    thumb: List<Pair<U32, U32>>,
  )
}

App.Ergopad.Scene.Hand.State.Points.empty: App.Ergopad.Scene.Hand.State.Points
  { [], [], [], [], [], [] }

type App.Ergopad.Scene.Hand.State {
  new(
    active_finger: Maybe<App.Ergopad.Scene.Hand.State.Finger>,
    points: App.Ergopad.Scene.Hand.State.Points
  )
}

type App.Ergopad.Scene.Hand.State.Finger {
  pinky,
  ring,
  middle,
  index,
  index_far,
  thumb,
}

App.Ergopad.Scene.Hand.State.Finger.eql(
  f1: App.Ergopad.Scene.Hand.State.Finger,
  f2: App.Ergopad.Scene.Hand.State.Finger,
): Bool
  case f1 f2 {
    pinky pinky: true
    ring ring: true
    middle middle: true
    index index: true
    index_far index_far: true
    thumb thumb: true
  } default false

App.Ergopad.Scene.Hand.State.Finger.show(
  finger: App.Ergopad.Scene.Hand.State.Finger
): String
  case finger {
    pinky: "pinky"
    ring: "ring"
    middle: "middle"
    index: "index"
    index_far: "index far"
    thumb: "thumb"
  }

App.Ergopad.Scene.Hand.State.empty: App.Ergopad.Scene.Hand.State
  {
    Maybe.some!(App.Ergopad.Scene.Hand.State.Finger.middle),
    App.Ergopad.Scene.Hand.State.Points.empty
  }
