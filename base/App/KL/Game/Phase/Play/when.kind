App.KL.Game.Phase.Play.when(
  local: App.KL.Game.State.Local
  game: App.KL.Game
  event: App.Event,
): IO<Maybe<App.State.local<App.KL.State>>>
  let room = String.take(16, Crypto.Keccak.hash(local@room))
  open game
  case event {
    frame:
      let picks = App.KL.Game.Cast.picks_of(local@user, game)
      let preview = local@preview <- (local@preview@picks <- picks)
      App.set_local!(App.KL.State.Local.game(preview))
    mouse_move:
      if String.eql("game_screen", event.id) then
        let {x,y} = event.mouse_pos
        App.set_local!(App.KL.State.Local.game(local@mouse <- {x / 2, y / 2}))
      else
        App.pass!
    key_down:
      App.set_local!(App.KL.State.Local.game(Maybe {
        get casted_skill  = App.KL.Game.Skill.get(local@user, event.code, game)
        let preview       = local@preview
        let preview       =
          case preview@skill as skill {
            none: 
              preview@skill <- some(event.code)
            some:
              if skill.value =? event.code then
                preview@skill <- none
              else 
                preview@skill <- some(event.code)
          }          
        return local@preview <- preview
      } <> local))
    mouse_down: 
      // only allow cast skill in preparation mode
      case game.moment {
        preparation:
          let preview = local@preview
          case preview@skill as skill {
            none: App.pass!
            some:
              IO {
                // log("Key up " | Char.to_string(skill.value))
                let coord = Hexagonal.Axial.from_screen_xy(local@mouse, App.KL.Constants.hexagon_radius, App.KL.Constants.center_x, App.KL.Constants.center_y)
                let preview = preview@skill <- none
                App.new_post!(room, App.KL.Game.Phase.Play.Event.cast.serial(skill.value, coord))
                App.set_local!(App.KL.State.Local.game(local@preview <- preview))
              }
          }
        execution:
          let preview = local@preview
          case preview@skill as skill {
            none: App.pass!
            some:
              let preview = preview@skill <- none
              App.set_local!(App.KL.State.Local.game(local@preview <- preview))
          }
      }
  } default App.pass!
